{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","Detail","useState","dds","dds변경","inputDa","inputDa변경","스위치","스위치변경","재고","useContext","재고context","useEffect","타이면","setTimeout","clearTimeout","history","useHistory","useParams","id","className","type","onChange","e","target","value","src","eval","width","shoes","title","content","price","Info","onClick","dispatch","data","name","quan","push","goBack","in","classNames","timeout","Detail1","누른탭","누른탭변경","variant","defaultActiveKey","Item","Link","eventKey","TabContent","state를props화","state","console","log","reducer","connect"],"mappings":"uhDAyBIA,aAAKC,iDAAOC,IAAV,2OAIFC,aAAKF,iDAAOG,GAAV,+PAEO,SAAAC,GAAK,OAAIA,EAAMC,gBAI5B,SAASC,OAAOF,OAAO,IAAD,UAECG,oDAAS,aAFV,6LAEbC,IAFa,cAERC,gBAFQ,yBAGSF,sDAHT,8LAGbG,QAHa,cAGJC,oBAHI,yBAICJ,qDAAS,GAJV,8LAIbK,mBAJa,cAIRC,+BAJQ,cAKdC,aAAKC,sDAAWC,wCAGpBC,sDAAU,WAGR,IAAIC,EAAMC,YAAW,WAAOV,gBAAM,eAAkB,KAGpD,OAAO,WAAOW,aAAaF,MAC1B,IAEH,IAAIG,QAAUC,0DAjBI,WAkBLC,0DAAPC,GAlBY,WAkBZA,GACN,OACI,oEAAKC,UAAU,YAAf,UACE,4DAAC1B,aAAD,UACE,4DAACG,aAAD,CAAIuB,UAAU,MAAd,8CAEDf,QACD,qEAAOgB,KAAK,OAAOC,SAAU,SAACC,GAC5BjB,oBAAUiB,EAAEC,OAAOC,UAErB,mEAAKN,GAAG,MAAMC,UAAYjB,IAA1B,SACE,4JAEF,oEAAKiB,UAAU,MAAf,UACE,mEAAKA,UAAU,WAAf,SACE,mEAAKM,IAAK,4CAA4CC,KAAKA,KAAKR,IAAI,GAAG,OAAQS,MAAM,WAEvF,oEAAKR,UAAU,gBAAf,UACE,kEAAIA,UAAU,OAAd,SAAsBrB,MAAM8B,MAAMV,IAAIW,QACtC,0EAAI/B,MAAM8B,MAAMV,IAAIY,UACpB,0EAAIhC,MAAM8B,MAAMV,IAAIa,QACpB,4DAACC,KAAD,CAAMxB,eAAIV,MAAMU,eAEhB,sEAAQW,UAAU,iBAAiBc,QACjC,WAEEnC,MAAMoC,SAAS,CAAEd,KAAO,2BAAQe,KAAM,CAAEjB,GAAKA,GAAKkB,KAAOtC,MAAM8B,MAAMV,IAAIW,MAAQQ,KAAO,KACxFtB,QAAQuB,KAAK,UAJjB,sCAOA,sEAAQnB,UAAU,iBAAiBc,QAAS,WAC1ClB,QAAQwB,UADV,4CAMJ,4DAAC,sDAAD,CAAeC,GAAIlC,mBAAKmC,WAAW,MAAMC,QAAS,IAAlD,SACE,4DAACC,QAAD,CAASpC,iCAAOA,sCAQ5B,SAASyB,KAAMlC,GACb,OACE,8FAASA,EAAMU,aAAG,GAAlB,OAKJ,SAASmC,QAAS7C,GAAQ,IAAD,EACJG,oDAAS,GADL,4KAClB2C,EADkB,KACbC,EADa,KAEvB,OACE,8EACE,6DAAC,+CAAD,CAAKC,QAAQ,OAAOC,iBAAiB,SAArC,UACE,4DAAC,+CAAIC,KAAL,UACE,4DAAC,+CAAIC,KAAL,CAAUC,SAAS,SAASjB,QAAS,WACnCY,EAAM,IADR,sBAIF,4DAAC,+CAAIG,KAAL,UACE,4DAAC,+CAAIC,KAAL,CAAUC,SAAS,SAASjB,QAAS,WACnCY,EAAM,IADR,2BAKJ,4DAACM,WAAD,CAAYP,qBAAKA,EAAKrC,iCAAOT,EAAMS,oCAKzC,SAAS4C,WAAWrD,GAIlB,OAHAa,sDAAU,WACRb,EAAMS,gCAAM,MAEI,IAAdT,EAAM8C,mBACD,8FACgB,IAAd9C,EAAM8C,mBACR,8FACgB,IAAd9C,EAAM8C,mBACR,mGADF,EAKT,SAASQ,uBAAaC,GAEpB,OADAC,QAAQC,IAAIF,GACN,CACFA,MAAQA,EAAMG,SAILC,+EAAQL,uBAARK,CAAsBzD","file":"static/js/4.bf9c1695.chunk.js","sourcesContent":["\r\nimport React, { useEffect, useState, useContext } from 'react';\r\n\r\nimport { Navbar, Nav, Form , NavDropdown ,Button ,FormControl,Jumbotron } from 'react-bootstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//yarn add styled-components\r\n//yarn add react-router-dom\r\n//yarn add node-sass\r\n//yarn add react-bootstrap bootstrap\r\n//yarn add react-transition-group\r\n//yarn add redux react-redux\r\n//yarn add axios\r\n\r\nimport styled from 'styled-components';\r\n\r\n//import './Detail.css';\r\nimport './Detail.scss';\r\n\r\nimport {재고context} from './App.js'\r\n\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\n \r\nlet 박스 = styled.div`\r\n  padding : 20px\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n  font-size : 25px;\r\n  color : ${ props => props.색상 }\r\n`;\r\n\r\n\r\nfunction Detail(props){ \r\n\r\n    let [dds, dds변경] = useState('my-alert2');\r\n    let [inputDa, inputDa변경] = useState();\r\n    let [스위치, 스위치변경] = useState(false);\r\n    let 재고 = useContext(재고context);\r\n    \r\n\r\n    useEffect(()=> {\r\n      //console.log(111111);\r\n      //2초후 alert삭제 \r\n      let 타이면 = setTimeout(()=>{  dds변경(\"my-alert3\");  }, 2000)\r\n\r\n      //return function 어쩌구 (){ clearTimeout(타이면);}\r\n      return ()=> { clearTimeout(타이면);}\r\n    }, [] );\r\n\r\n    let history = useHistory();\r\n    let { id } = useParams();\r\n    return (\r\n        <div className=\"container\">\r\n          <박스>\r\n            <제목 className='red'>상세페이지</제목>\r\n          </박스>\r\n          {inputDa}\r\n          <input type=\"text\" onChange={(e)=>{\r\n            inputDa변경(e.target.value)\r\n          }}/> \r\n          <div id='dsf' className={ dds }>\r\n            <p>재고가 얼마 남지 않았습니다</p>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\"> \r\n              <img src={\"https://codingapple1.github.io/shop/shoes\"+eval(eval(id)+1)+\".jpg\"} width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n              <h4 className=\"pt-5\">{props.shoes[id].title}</h4> \r\n              <p>{props.shoes[id].content}</p>\r\n              <p>{props.shoes[id].price}</p>\r\n              <Info 재고={props.재고}></Info>\r\n\r\n              <button className=\"btn btn-danger\" onClick={\r\n                ()=>{\r\n                  //props.재고변경([9, 10, 11]);\r\n                  props.dispatch({ type : \"항목증가\", data :{ id : id , name : props.shoes[id].title , quan : 1 } } ) \r\n                  history.push('/cart');\r\n                }\r\n              }>주문하기</button> \r\n              <button className=\"btn btn-danger\" onClick={()=>{\r\n                history.goBack();\r\n                //history.push('/');\r\n              }}>뒤로가기</button> \r\n            </div>\r\n          </div>\r\n          <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n            <Detail1 스위치변경={스위치변경}></Detail1>\r\n          </CSSTransition>\r\n            \r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nfunction Info (props) {\r\n  return (\r\n    <p>재고 : {props.재고[0]} </p>\r\n  )\r\n}\r\n\r\n\r\nfunction Detail1( props ){\r\n  let [누른탭, 누른탭변경] = useState(0);\r\n  return (\r\n    <div>\r\n      <Nav variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-0\" onClick={()=> {\r\n            누른탭변경(0);\r\n          }}>Active</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\" onClick={()=> {\r\n            누른탭변경(1);\r\n          }}>Option 2</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <TabContent 누른탭={누른탭} 스위치변경={props.스위치변경} ></TabContent>\r\n    \r\n    </div>\r\n  )\r\n} \r\nfunction TabContent(props) { \r\n  useEffect(()=>{\r\n    props.스위치변경(true);\r\n  })\r\n  if (props.누른탭 === 0){\r\n    return <div>내용0</div>\r\n  } else if (props.누른탭 === 1){\r\n    return <div>내용1</div>\r\n  } else if (props.누른탭 === 2){\r\n    return <div>내용2</div>\r\n  }\r\n}\r\n\r\nfunction state를props화(state) {\r\n  console.log(state);\r\n  return{\r\n      state : state.reducer, \r\n  }\r\n}\r\n\r\nexport default connect(state를props화)(Detail);\r\n\r\n\r\n \r\n\r\n\r\n/*class Detail2 extends React.Component {\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    \r\n  }\r\n}*/"],"sourceRoot":""}