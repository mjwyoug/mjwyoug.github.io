{"version":3,"sources":["data.js","cart.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Cart1s","Parent","이름","나이","props","Child1","Child2","memo","props1","useEffect","console","log","connect","state","reducer","state2","reducer2","useState","Table","striped","bordered","hover","map","a","i","name","quan","onClick","dispatch","type","className","Detail","lazy","재고context","React","createContext","Listmake","미식","재고","useContext","history","useHistory","넘겨","url","push","src","width","App","shoes","shoes변경","재고변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","Form","inline","FormControl","placeholder","Button","variant","exact","path","Jumbotron","Provider","value","axios","get","then","result","shoes2","data","s","b","catch","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","기본state","store","createStore","combineReducers","액션","copy","found","findIndex","state1","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c7fa458c.chunk.js","sourcesContent":["export default \r\n[\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n] ","import React, {useState, useEffect, memo} from 'react'\r\nimport {  Table} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props){\r\n    let [est , est변경 ] = useState(true);\r\n    return (\r\n        <>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>수량</th>\r\n                    <th>변경</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { \r\n                        props.state.map((a,i)=>{\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{a.id}</td>\r\n                                    <td>{a.name}</td>\r\n                                    <td>{a.quan}</td>\r\n                                    <td>\r\n                                        <button onClick={()=>{ props.dispatch({ type : \"수량증가\", id : a.id} ) }}> + </button>\r\n                                        <button onClick={()=>{ props.dispatch({ type : \"수량감소\", id : a.id} ) }}> - </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })  \r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            {\r\n                props.state2=== true ? \r\n                (\r\n                    <div className=\"my-alert2\">\r\n                        <p>지금 구매하시면 신규할이 20%</p>\r\n                        <button onClick={()=>{ props.dispatch({type:\"닫기\"})}}>닫기</button>\r\n                    </div>\r\n                ) : null\r\n            }\r\n            <Cart1s></Cart1s>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n  function Cart1s(){\r\n    return (\r\n      <Parent 이름=\"존박\" 나이=\"20\"/>\r\n    )\r\n  }\r\n  \r\n  function Parent(props){\r\n    return (\r\n      <div>\r\n        <Child1 이름={props.이름} />\r\n        <Child2 나이={props.나이} />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  let Child1 = memo (function (props1){\r\n    useEffect( ()=>{ console.log('렌더링s됨1') } );\r\n    return <div>{props1.이름}</div>\r\n  });\r\n  let Child2 = memo ( function (props){\r\n    useEffect( ()=>{ console.log('렌더링s됨2') } );\r\n    return <div>{props.나이}</div>\r\n  } );\r\n\r\n\r\nfunction state를props화(state) {\r\n    console.log(state);\r\n    return{\r\n        state : state.reducer,\r\n        state2 : state.reducer2\r\n    }\r\n}\r\n\r\nexport default connect(state를props화)(Cart);","import './App.css';\nimport { Navbar, Nav, Form , NavDropdown ,Button ,FormControl,Jumbotron } from 'react-bootstrap';\nimport React, { useContext, useState, lazy, Suspense } from 'react';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport name from './data.js'; \nimport axios from 'axios';\nimport Cart from './cart.js'; ;\n//yarn add axios\nlet Detail = lazy( ()=>{ return import('./Detail.js') }  );\n\n \nexport let 재고context = React.createContext();\n\nfunction App() {\n  \n  let [shoes, shoes변경] = useState(name);\n  let [재고 , 재고변경] = useState([10,11,12]);\n\n\n  return (\n    <div className=\"App\"> \n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">샵</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n\n          {/*<Nav.Link ><Link to=\"/\">Home</Link></Nav.Link>\n            <Nav.Link ><Link to=\"/detail\">detail</Link></Nav.Link>*/}\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">detail</Nav.Link>\n            <Nav.Link as={Link} to=\"/cart\">cart</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar> \n      \n      <Switch>\n        <Route exact path=\"/\"> \n          <Jumbotron className=\"background\">\n            <h1>20% Season OFF</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron> \n          <div className=\"container\"> \n              <재고context.Provider value={재고}>\n                <div className=\"row\">\n                  <Listmake 넘겨={shoes}></Listmake> \n                </div> \n              </재고context.Provider>\n            <button className=\"btn btn-primary\" onClick={()=>{\n\n              // axios.post\n              // 로딩중이라는 UI 띄움 \n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                var shoes2 = [...shoes];\n                result.data.map((a)=>{ \n                  // 로딩중이라는 UI 안보이게 처리 \n                  var s = false;\n                  shoes2.map((b)=>{ if(b.id == a.id ){ s = true; }; return b; });\n                  if(!s){ shoes2.push(a); }\n                  return a;\n                });\n                console.log(shoes2);\n                shoes변경(shoes2);\n                //shoes변경( [...shoes , ...result.data] );  \n              })\n              .catch(()=>{\n                console.log(\"실패했어요 \");\n              });\n\n            }}>더보기</button>\n          </div>\n        </Route>\n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩중이에요</div>}>\n              <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}></Detail>\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n        \n\n        <Route path=\"/:id\">\n          <div>ddk </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Listmake(미식){\n  \n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return (\n    \n    미식.넘겨.map(function(a, i){\n      var s = i+1;\n      var url = \"https://codingapple1.github.io/shop/shoes\" + s  + \".jpg\";\n      \n      ///console.log(a);\n      return (\n        \n        <div className=\"col-md-4\" key={i} onClick={()=>{\n          history.push('/detail/'+a.id);\n        }}>\n          <img src={url} width=\"100%\" />\n          <h4>{ a.title }</h4>\n          <p>{ a.content } & { a.price }</p> \n          <div>{재고[0]}</div>\n        </div>\n      );\n    })\n  )\n}\n\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport {Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nlet 기본state = [ \n];\n\nlet alert초기값 = true;\n\nfunction reducer2(state1=alert초기값, 액션){\n  if (액션.type ===\"닫기\") { \n    state1=false;\n    return state1; \n  } else {\n    return state1;\n  } \n}\nfunction reducer(state = 기본state, 액션){\n  if (액션.type ===\"수량증가\") {\n    let copy = [...state];\n    copy[액션.id].quan++; \n    return  copy;\n  }else if (액션.type ===\"수량감소\") {\n    let copy = [...state];\n    copy[액션.id].quan--; \n    return  copy;\n  }else if (액션.type ===\"항목증가\") {\n    let copy = [...state];\n    let s = true;\n    //console.log(액션.data.id , copy);\n    //console.log(copy[액션.data.id]);\n    let found = state.findIndex((a)=>{\n      return a.id === 액션.data.id ;\n    })\n    /*copy.map((a)=>{\n      if(a.id ==액션.data.id ){\n        s = false;\n      }\n      return a ; \n    })*/\n    if(found >=0){\n      let copy = [...state]; \n      copy[액션.data.id].quan++; \n    } else {\n      copy.push(액션.data );\n    }\n    \n     \n    return  copy;\n  } else {\n    return state;\n  } \n}\nlet store = createStore(combineReducers({reducer, reducer2})) ;\n\n//<BrowserRouter>\nReactDOM.render(\n  <React.StrictMode> \n    <BrowserRouter>\n      <Provider store={store}>\n        <App /> \n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}